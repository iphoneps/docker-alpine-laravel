worker_processes  auto;
pid /run/nginx.pid;
worker_rlimit_nofile 2048;
user www-data www-data;

events {
    worker_connections  1024;

    # With multi_accept set to "on" mginx will try requests even if it not realistic.
    # In this case it should not and let load balancer do the job.
	multi_accept off;

	accept_mutex on;
	use epoll;
}

http {

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json image/svg+xml application/javascript application/x-javascript text/javascript text/xml application/xml application/xml+rss;

    include       mime.types;
    default_type  application/octet-stream;
	reset_timedout_connection on;
	access_log off;
	error_log /dev/stdout;

    keepalive_timeout  200;
    client_max_body_size 100M;

    server {
        listen [::]:80 default_server;
        listen 80 default_server;
        server_name _;

        sendfile off;

        root /var/www/public;
        index index.php index.html;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to index.php
            try_files $uri $uri/ /index.php?q=$uri&$args;
        }

        # redirect server error pages to the static page /50x.html
        error_page 500 /500.html;
        location = /500.html {
            root /var/www/ips-libs/nginx-error-pages;
        }

        error_page 501 /501.html;
        location = /501.html {
            root /var/www/ips-libs/nginx-error-pages;
        }

        error_page 502 /502.html;
        location = /502.html {
            root /var/www/ips-libs/nginx-error-pages;
        }

        error_page 503 /503.html;
        location = /503.html {
            root /var/www/ips-libs/nginx-error-pages;
        }

        error_page 504 /504.html;
        location = /504.html {
            root /var/www/ips-libs/nginx-error-pages;
        }

        error_page 505 /505.html;
        location = /505.html {
            root /var/www/ips-libs/nginx-error-pages;
        }

        error_page 506 507 508 509 510 511 /50x.html;
        location = /50x.html {
            root /var/www/ips-libs/nginx-error-pages;
        }

        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/run/php/php8.1-fpm.sock;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_index index.php;
            include fastcgi_params;

            #This is good for security reasons hide server tokens / hide Nginx version number
            server_tokens off;
            fastcgi_read_timeout 140;
        }

        location ~* \.(?:ipslog)$ {
            add_header Access-Control-Allow-Origin "*";
            server_tokens off;
            access_log off;
            return 204;
        }

        # assets, media
        location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv|svg)$ {
        	try_files $uri /index.php?q=$uri&$args;
        	expires 7d;
        	access_log off;
        }

        # svg, fonts
        location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?|webmanifest)$ {
        	add_header Access-Control-Allow-Origin "*";
        	expires 7d;
        	access_log off;
        }

        # fixes the issue with Livewire file uploads
        location ^~ /livewire {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # deny access to . files, for security
        #
        location ~ /\. {
            log_not_found off;
            deny all;
        }

        # currently only used for Apple pay domain authorisation file
		location ^~ /.well-known {
            allow all;
            default_type "text/plain";
        }
    }
}
