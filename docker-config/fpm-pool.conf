[global]
; Log to stdout
error_log = /dev/stdout

[www]

; UNIX domain sockets offer better performance than TCP sockets over loopback
; interface .(less copying of data, fewer context switches). UNIX domain sockets
; know that they're executing on the same system, so they can avoid some checks
; and operations (like tcp negotiation and routing); which makes them faster and
; lighter than TCP/IP sockets.
listen = /var/run/php7-fpm.sock

; Set sock file permissions so that NGINX can access it. Doing it this way does
; not enable the security problem that this change was supposed to fix.
listen.owner = nginx
listen.group = nginx

; Ondemand process manager
pm = ondemand

; The number of child processes to be created when pm is set to 'static' and the
; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
; This value sets the limit on the number of simultaneous requests that will be
; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.
; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP
; CGI. The below defaults are based on a server without much resources. Don't
; forget to tweak pm.* to fit your needs.
; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'
; Note: This value is mandatory.
pm.max_children = 4000

pm.start_servers = 10
pm.min_spare_servers = 10

; The number of seconds after which an idle process will be killed.
; Note: Used only when pm is set to 'ondemand'
; Default Value: 10s
pm.process_idle_timeout = 10s;

; The number of requests each child process should execute before respawning.
; This can be useful to work around memory leaks in 3rd party libraries. For
; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.
; Default Value: 0
pm.max_requests = 0

; Make sure the FPM workers can reach the environment variables for configuration
clear_env = no

; Catch output from PHP
; Redirect worker stdout and stderr into main error log.
; If not set, stdout and stderr will be redirected to /dev/null according to FastCGI specs.
catch_workers_output = yes